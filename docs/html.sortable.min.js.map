{"version":3,"sources":["html.sortable.js"],"names":["root","factory","define","amd","exports","module","sortable","this","_debounce","fn","delay","context","timer","eContext","args","arguments","clearTimeout","setTimeout","apply","dragging","draggingHeight","placeholders","sortables","_data","element","key","value","undefined","h5s","data","_removeData","_matches","el","selector","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","_filter","nodes","wanted","Array","prototype","slice","result","i","length","push","indexOf","_on","event","callback","addEventListener","events","_off","removeEventListener","_attr","attribute","setAttribute","_removeAttr","removeAttribute","_offset","rect","getClientRects","left","window","scrollX","top","scrollY","_removeItemEvents","items","_removeSortableEvents","_attachGhost","ghost","dataTransfer","effectAllowed","setData","setDragImage","draggedItem","x","y","_addGhostPos","parseInt","pageX","pageY","_makeGhost","_getGhost","_removeSortableData","_removeItemData","_listsConnected","curList","destList","_getHandles","handle","handles","querySelectorAll","concat","_destroySortable","sortableElement","opts","_getChildren","_enableSortable","spanEl","document","createElement","dragDrop","disableIEFix","parent","parentElement","_disableSortable","_reloadSortable","_index","children","_attached","parentNode","_html2element","html","tagName","innerHTML","firstChild","_before","target","insertBefore","_after","nextElementSibling","_detach","removeChild","_makeEvent","name","detail","e","createEvent","initEvent","_dispatchEventOnConnected","forEach","dispatchEvent","sortableElements","options","method","String","connectWith","placeholder","dragImage","placeholderClass","draggingClass","hoverClass","debounce","option","getChildren","Element","test","index","startParent","classList","add","split","getAttribute","id","remove","stopImmediatePropagation","console","log","getComputedStyle","height","item","startparent","newParent","style","display","oldDisplay","oldindex","elementIndex","oldElementIndex","endparent","visiblePlaceholder","preventDefault","stopPropagation","filter","debouncedDragOverEnter","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","appendChild","onDragOverEnter","dropEffect","destroy","enable","disable"],"mappings":"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","file":"html.sortable.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n}(this, function() {\n/*\n * HTML5 Sortable library\n * https://github.com/voidberg/html5sortable\n *\n * Original code copyright 2012 Ali Farhadi.\n * This version is mantained by Lukas Oppermann <lukas@vea.re>\n * Previously also mantained by Alexandru Badiu <andu@ctrlz.ro>\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n *\n * Released under the MIT license.\n */\n'use strict'\n/*\n * variables global to the plugin\n */\nvar dragging\nvar draggingHeight\nvar placeholders = []\nvar sortables = []\n/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nvar _data = function (element, key, value) {\n  if (value === undefined) {\n    return element && element.h5s && element.h5s.data && element.h5s.data[key]\n  } else {\n    element.h5s = element.h5s || {}\n    element.h5s.data = element.h5s.data || {}\n    element.h5s.data[key] = value\n  }\n}\n/**\n * Remove data from element\n * @param {Element} element\n */\nvar _removeData = function (element) {\n  if (element.h5s) {\n    delete element.h5s.data\n  }\n}\n/**\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\n * @param {el} DOM element\n * @param {selector} selector test against the element\n * @retirms {boolean}\n */\nvar _matches = function (el, selector) {\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\n}\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nvar _filter = function (nodes, wanted) {\n  if (!wanted) {\n    return Array.prototype.slice.call(nodes)\n  }\n  var result = []\n  for (var i = 0; i < nodes.length; ++i) {\n    if (typeof wanted === 'string' && _matches(nodes[i], wanted)) {\n      result.push(nodes[i])\n    }\n    if (wanted.indexOf(nodes[i]) !== -1) {\n      result.push(nodes[i])\n    }\n  }\n  return result\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nvar _on = function (element, event, callback) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _on(element[i], event, callback)\n    }\n    return\n  }\n  element.addEventListener(event, callback)\n  element.h5s = element.h5s || {}\n  element.h5s.events = element.h5s.events || {}\n  element.h5s.events[event] = callback\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nvar _off = function (element, event) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _off(element[i], event)\n    }\n    return\n  }\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n    element.removeEventListener(event, element.h5s.events[event])\n    delete element.h5s.events[event]\n  }\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nvar _attr = function (element, attribute, value) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _attr(element[i], attribute, value)\n    }\n    return\n  }\n  element.setAttribute(attribute, value)\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nvar _removeAttr = function (element, attribute) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _removeAttr(element[i], attribute)\n    }\n    return\n  }\n  element.removeAttribute(attribute)\n}\n/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nvar _offset = function (element) {\n  var rect = element.getClientRects()[0]\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  }\n}\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n  _off(items, 'dragstart')\n  _off(items, 'dragend')\n  _off(items, 'selectstart')\n  _off(items, 'dragover')\n  _off(items, 'dragenter')\n  _off(items, 'drop')\n}\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function (sortable) {\n  _off(sortable, 'dragover')\n  _off(sortable, 'dragenter')\n  _off(sortable, 'drop')\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function (event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'move'\n  event.dataTransfer.setData('text', '')\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y)\n  }\n}\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function (event, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left)\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top)\n  }\n  return ghost\n}\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param {Element} draggedItem - the item that the user drags\n */\nvar _makeGhost = function (draggedItem) {\n  return {\n    draggedItem: draggedItem\n  }\n}\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function (event, draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = _makeGhost(draggedItem)\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost)\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost)\n}\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n  _removeData(sortable)\n  _removeAttr(sortable, 'aria-dropeffect')\n}\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function (items) {\n  _removeAttr(items, 'aria-grabbed')\n  _removeAttr(items, 'draggable')\n  _removeAttr(items, 'role')\n}\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function (curList, destList) {\n  if (curList === destList) {\n    return true\n  }\n  if (_data(curList, 'connectWith') !== undefined) {\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith')\n  }\n  return false\n}\nvar _getHandles = function (items, handle) {\n  var result = []\n  var handles\n  if (!handle) {\n    return items\n  }\n  for (var i = 0; i < items.length; ++i) {\n    handles = items[i].querySelectorAll(handle)\n    result = result.concat(Array.prototype.slice.call(handles))\n  }\n  return result\n}\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts') || {}\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortableElement)\n  _removeSortableData(sortableElement)\n  // remove event handlers & data from items\n  _off(handles, 'mousedown')\n  _removeItemEvents(items)\n  _removeItemData(items)\n}\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'move')\n  _attr(handles, 'draggable', 'true')\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span')\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    _on(handles, 'mousedown', function () {\n      if (items.indexOf(this) !== -1) {\n        this.dragDrop()\n      } else {\n        var parent = this.parentElement\n        while (items.indexOf(parent) === -1) {\n          parent = parent.parentElement\n        }\n        parent.dragDrop()\n      }\n    })\n  }\n}\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'none')\n  _attr(handles, 'draggable', 'false')\n  _off(handles, 'mousedown')\n}\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  // remove event handlers from items\n  _removeItemEvents(items)\n  _off(handles, 'mousedown')\n  // remove event handlers from sortable\n  _removeSortableEvents(sortableElement)\n}\n/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nvar _index = function (element) {\n  if (!element.parentElement) {\n    return 0\n  }\n  return Array.prototype.indexOf.call(element.parentElement.children, element)\n}\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function (element) {\n  return !!element.parentNode\n}\n/**\n * Convert HTML string into DOM element.\n * @param {Element|string} html\n * @param {string} tagname\n * @returns {Element}\n */\nvar _html2element = function (html, tagName) {\n  if (typeof html !== 'string') {\n    return html\n  }\n  var parentElement = document.createElement(tagName)\n  parentElement.innerHTML = html\n  return parentElement.firstChild\n}\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nvar _before = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target\n  )\n}\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nvar _after = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target.nextElementSibling\n  )\n}\n/**\n * Detach element from DOM\n * @param {Element} element\n */\nvar _detach = function (element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element)\n  }\n}\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function (name, detail) {\n  var e = document.createEvent('Event')\n  if (detail) {\n    e.detail = detail\n  }\n  e.initEvent(name, false, true)\n  return e\n}\n/**\n * @param {Element} sortableElement\n * @param {CustomEvent} event\n */\nvar _dispatchEventOnConnected = function (sortableElement, event) {\n  sortables.forEach(function (target) {\n    if (_listsConnected(sortableElement, target)) {\n      target.dispatchEvent(event)\n    }\n  })\n}\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {fn} Function to debounce\n * @param {delay} time to wait before calling function with latest arguments, 0 - no debounce\n * @param {context} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nfunction _debounce (fn, delay, context) {\n  var timer = null\n\n  if (delay === 0) {\n    return fn\n  }\n  return function () {\n    var eContext = context || this\n    var args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      fn.apply(eContext, args)\n    }, delay)\n  }\n}\n\nvar _getChildren = function (element) {\n  return element.children\n}\n\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nvar sortable = function (sortableElements, options) {\n  var method = String(options)\n\n  options = (function (options) {\n    var result = {\n      connectWith: false,\n      placeholder: null,\n      // dragImage can be null or a Element\n      dragImage: null,\n      disableIEFix: false,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false,\n      debounce: 0\n    }\n    for (var option in options) {\n      result[option] = options[option]\n    }\n    return result\n  })(options)\n\n  if (options && typeof options.getChildren === 'function') {\n    _getChildren = options.getChildren\n  }\n\n  if (typeof sortableElements === 'string') {\n    sortableElements = document.querySelectorAll(sortableElements)\n  }\n\n  if (sortableElements instanceof window.Element) {\n    sortableElements = [sortableElements]\n  }\n\n  sortableElements = Array.prototype.slice.call(sortableElements)\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /* jshint maxstatements:false */\n  sortableElements.forEach(function (sortableElement) {\n    if (/enable|disable|destroy/.test(method)) {\n      sortable[method](sortableElement)\n      return\n    }\n\n    // get options & set options on sortable\n    options = _data(sortableElement, 'opts') || options\n    _data(sortableElement, 'opts', options)\n    // reset sortable\n    _reloadSortable(sortableElement)\n    // initialize\n    var items = _filter(_getChildren(sortableElement), options.items)\n    var index\n    var startParent\n    var placeholder = options.placeholder\n    if (!placeholder) {\n      placeholder = document.createElement(\n        /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n      )\n    }\n    placeholder = _html2element(placeholder, sortableElement.tagName)\n    placeholder.classList.add.apply(\n      placeholder.classList,\n      options.placeholderClass.split(' ')\n    )\n\n    // setup sortable ids\n    if (!sortableElement.getAttribute('data-sortable-id')) {\n      var id = sortables.length\n      sortables[id] = sortableElement\n      _attr(sortableElement, 'data-sortable-id', id)\n      _attr(items, 'data-item-sortable-id', id)\n    }\n\n    _data(sortableElement, 'items', options.items)\n    placeholders.push(placeholder)\n    if (options.connectWith) {\n      _data(sortableElement, 'connectWith', options.connectWith)\n    }\n\n    _enableSortable(sortableElement)\n    _attr(items, 'role', 'option')\n    _attr(items, 'aria-grabbed', 'false')\n\n    // Mouse over class\n    if (options.hoverClass) {\n      var hoverClass = 'sortable-over'\n      if (typeof options.hoverClass === 'string') {\n        hoverClass = options.hoverClass\n      }\n\n      _on(items, 'mouseenter', function () {\n        this.classList.add(hoverClass)\n      })\n      _on(items, 'mouseleave', function () {\n        this.classList.remove(hoverClass)\n      })\n    }\n\n    // Handle drag events on draggable items\n    _on(items, 'dragstart', function (e) {\n      e.stopImmediatePropagation()\n      if (options.handle && !_matches(e.target, options.handle)) {\n        return\n      }\n\n      if (options.dragImage) {\n        _attachGhost(e, {\n          draggedItem: options.dragImage,\n          x: 0,\n          y: 0\n        })\n        console.log('WARNING: dragImage option is deprecated' +\n        ' and will be removed in the future!')\n      } else {\n        // add transparent clone or other ghost to cursor\n        _getGhost(e, this)\n      }\n      // cache selsection & add attr for dragging\n      this.classList.add(options.draggingClass)\n      dragging = this\n      _attr(dragging, 'aria-grabbed', 'true')\n      // grab values\n      index = _index(dragging)\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height)\n      startParent = this.parentElement\n      // dispatch sortstart event on each element in group\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n        item: dragging,\n        placeholder: placeholder,\n        startparent: startParent\n      }))\n    })\n    // Handle drag events on draggable items\n    _on(items, 'dragend', function () {\n      var newParent\n      if (!dragging) {\n        return\n      }\n      // remove dragging attributes and show item\n      dragging.classList.remove(options.draggingClass)\n      _attr(dragging, 'aria-grabbed', 'false')\n      dragging.style.display = dragging.oldDisplay\n      delete dragging.oldDisplay\n\n      placeholders.forEach(_detach)\n      newParent = this.parentElement\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n        item: dragging,\n        startparent: startParent\n      }))\n      if (index !== _index(dragging) || startParent !== newParent) {\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n          item: dragging,\n          index: _filter(_getChildren(newParent), _data(newParent, 'items'))\n              .indexOf(dragging),\n          oldindex: items.indexOf(dragging),\n          elementIndex: _index(dragging),\n          oldElementIndex: index,\n          startparent: startParent,\n          endparent: newParent\n        }))\n      }\n      dragging = null\n      draggingHeight = null\n    })\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    _on([sortableElement, placeholder], 'drop', function (e) {\n      var visiblePlaceholder\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return\n      }\n\n      e.preventDefault()\n      e.stopPropagation()\n      visiblePlaceholder = placeholders.filter(_attached)[0]\n      _after(visiblePlaceholder, dragging)\n      dragging.dispatchEvent(_makeEvent('dragend'))\n    })\n\n    var debouncedDragOverEnter = _debounce(function (element, pageY) {\n      if (!dragging) {\n        return\n      }\n\n      if (items.indexOf(element) !== -1) {\n        var thisHeight = parseInt(window.getComputedStyle(element).height)\n        var placeholderIndex = _index(placeholder)\n        var thisIndex = _index(element)\n        if (options.forcePlaceholderSize) {\n          placeholder.style.height = draggingHeight + 'px'\n        }\n\n        // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight\n          var offsetTop = _offset(element).top\n          if (placeholderIndex < thisIndex &&\n              pageY < offsetTop + deadZone) {\n            return\n          }\n          if (placeholderIndex > thisIndex &&\n              pageY > offsetTop + thisHeight - deadZone) {\n            return\n          }\n        }\n\n        if (dragging.oldDisplay === undefined) {\n          dragging.oldDisplay = dragging.style.display\n        }\n        dragging.style.display = 'none'\n        if (placeholderIndex < thisIndex) {\n          _after(element, placeholder)\n        } else {\n          _before(element, placeholder)\n        }\n        // Intentionally violated chaining, it is more complex otherwise\n        placeholders\n          .filter(function (element) { return element !== placeholder })\n          .forEach(_detach)\n      } else {\n        if (placeholders.indexOf(element) === -1 &&\n            !_filter(_getChildren(element), options.items).length) {\n          placeholders.forEach(_detach)\n          element.appendChild(placeholder)\n        }\n      }\n    }, options.debounce)\n\n    // Handle dragover and dragenter events on draggable items\n    var onDragOverEnter = function (e) {\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return\n      }\n\n      e.preventDefault()\n      e.stopPropagation()\n      e.dataTransfer.dropEffect = 'move'\n      debouncedDragOverEnter(this, e.pageY)\n    }\n\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter)\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter)\n  })\n\n  return sortableElements\n}\n\nsortable.destroy = function (sortableElement) {\n  _destroySortable(sortableElement)\n}\n\nsortable.enable = function (sortableElement) {\n  _enableSortable(sortableElement)\n}\n\nsortable.disable = function (sortableElement) {\n  _disableSortable(sortableElement)\n}\n\n\nreturn sortable;\n}));\n"]}