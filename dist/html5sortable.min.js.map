{"version":3,"file":"html5sortable.min.js","sources":["../src/matches.ts","../src/data.ts","../src/filter.ts","../src/eventListener.ts","../src/attribute.ts","../src/offset.ts","../src/index.ts","../src/removeElement.ts","../src/insertHtmlElements.ts","../src/html5sortable.ts","../src/debounce.ts"],"sourcesContent":["/**\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\n * @param {el} DOM element\n * @param {selector} selector test against the element\n * @returns {boolean}\n */\n/* istanbul ignore next */\nexport default function (el, selector) {\n  return (el.matches || el.msMatchesSelector).call(el, selector)\n}\n","/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nfunction addData (element, key, value) {\n  if (value === undefined) {\n    return element && element.h5s && element.h5s.data && element.h5s.data[key]\n  } else {\n    element.h5s = element.h5s || {}\n    element.h5s.data = element.h5s.data || {}\n    element.h5s.data[key] = value\n  }\n}\n/**\n * Remove data from element\n * @param {Element} element\n */\nfunction removeData (element) {\n  if (element.h5s) {\n    delete element.h5s.data\n  }\n}\n\nexport { addData, removeData }\n","import _matches from './matches'\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nexport default (nodes, wanted) => {\n  if (!wanted) {\n    return Array.prototype.slice.call(nodes)\n  }\n  var result = []\n  for (var i = 0; i < nodes.length; ++i) {\n    if (typeof wanted === 'string' && _matches(nodes[i], wanted)) {\n      result.push(nodes[i])\n    }\n    if (wanted.indexOf(nodes[i]) !== -1) {\n      result.push(nodes[i])\n    }\n  }\n  return result\n}\n","/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nfunction addEventListener (element, event, callback) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      addEventListener(element[i], event, callback)\n    }\n    return\n  }\n  element.addEventListener(event, callback)\n  element.h5s = element.h5s || {}\n  element.h5s.events = element.h5s.events || {}\n  element.h5s.events[event] = callback\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nfunction removeEventListener (element, event) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      removeEventListener(element[i], event)\n    }\n    return\n  }\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n    element.removeEventListener(event, element.h5s.events[event])\n    delete element.h5s.events[event]\n  }\n}\n\nexport { addEventListener, removeEventListener }\n","/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nfunction addAttribute (element, attribute, value) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      addAttribute(element[i], attribute, value)\n    }\n    return\n  }\n  element.setAttribute(attribute, value)\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nfunction removeAttribute (element, attribute) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      removeAttribute(element[i], attribute)\n    }\n    return\n  }\n  element.removeAttribute(attribute)\n}\n\nexport { addAttribute, removeAttribute }\n","/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nexport default (element) => {\n  var rect = element.getClientRects()[0]\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  }\n}\n","/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nexport default (element) => {\n  if (!element.parentElement) {\n    return 0\n  }\n  return Array.prototype.indexOf.call(element.parentElement.children, element)\n}\n","/**\n * Detach element from DOM\n * @param {Element} element\n */\nexport default (element) => {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element)\n  }\n}\n","/**\n * Convert HTML string into DOM element.\n * @param {Element|string} html\n * @param {string} tagname\n * @returns {Element}\n */\nlet makeElement = (html, tagName) => {\n  if (typeof html !== 'string') {\n    return html\n  }\n  var parentElement = document.createElement(tagName)\n  parentElement.innerHTML = html\n  return parentElement.firstChild\n}\n\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nlet insertBefore = (target, element) => {\n  target.parentElement.insertBefore(\n    element,\n    target\n  )\n}\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nlet insertAfter = (target, element) => {\n  target.parentElement.insertBefore(\n    element,\n    target.nextElementSibling\n  )\n}\n\nexport { makeElement, insertBefore, insertAfter }\n","'use strict'\n\nimport _matches from './matches'\nimport { addData as _data, removeData as _removeData } from './data'\nimport _filter from './filter'\nimport { addEventListener as _on, removeEventListener as _off } from './eventListener'\nimport { addAttribute as _attr, removeAttribute as _removeAttr } from './attribute'\nimport _offset from './offset'\nimport _debounce from './debounce'\nimport _index from './index'\nimport _detach from './removeElement'\nimport {insertBefore as _before, insertAfter as _after} from './insertHtmlElements'\n/*\n * variables global to the plugin\n */\nvar dragging\nvar draggingHeight\nvar placeholderMap = new Map()\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n  _off(items, 'dragstart')\n  _off(items, 'dragend')\n  _off(items, 'selectstart')\n  _off(items, 'dragover')\n  _off(items, 'dragenter')\n  _off(items, 'drop')\n  _off(items, 'mouseenter')\n  _off(items, 'mouseleave')\n}\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function (sortable) {\n  _off(sortable, 'dragover')\n  _off(sortable, 'dragenter')\n  _off(sortable, 'drop')\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nlet _makePlaceholder = (sortableElement, placeholder = undefined, placeholderClasses = 'sortable-placeholder') => {\n  if (typeof placeholder === 'string') {\n    let tempContainer = document.createElement(sortableElement.tagName)\n    tempContainer.innerHTML = placeholder\n    placeholder = tempContainer.children[0]\n  } else {\n    switch (sortableElement.tagName) {\n      case 'UL':\n        placeholder = 'li'\n        break\n      case 'OL':\n        placeholder = 'li'\n        break\n      case 'TABLE':\n        placeholder = 'tr'\n        break\n      case 'TBODY':\n        placeholder = 'tr'\n        break\n      default:\n        placeholder = 'div'\n    }\n    placeholder = document.createElement(placeholder)\n  }\n  // add classes to placeholder\n  placeholder.classList.add(...placeholderClasses.split(' '))\n\n  return placeholder\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function (event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'copyMove'\n  // Firefox requires some arbitrary content in the data in order for\n  // the drag & drop functionality to work\n  event.dataTransfer.setData('text', 'arbitrary-content')\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y)\n  }\n}\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function (event, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left)\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top)\n  }\n  return ghost\n}\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param {Element} draggedItem - the item that the user drags\n */\nvar _makeGhost = function (draggedItem) {\n  return {\n    draggedItem: draggedItem\n  }\n}\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function (event, draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = _makeGhost(draggedItem)\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost)\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost)\n}\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {Element} draggedItem - the item that the user drags\n * @param {Element} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n  var ditem = draggedItem\n  if (_isCopyActive(sortable)) {\n    ditem = draggedItem.cloneNode(true)\n    _attr(ditem, 'aria-copied', 'true')\n    draggedItem.parentElement.appendChild(ditem)\n    ditem.style.display = 'none'\n    ditem.oldDisplay = draggedItem.style.display\n  }\n  return ditem\n}\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n  _removeData(sortable)\n  _removeAttr(sortable, 'aria-dropeffect')\n}\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function (items) {\n  _removeAttr(items, 'aria-grabbed')\n  _removeAttr(items, 'aria-copied')\n  _removeAttr(items, 'draggable')\n  _removeAttr(items, 'role')\n}\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function (curList, destList) {\n  var acceptFrom = _data(curList, 'opts').acceptFrom\n  if (acceptFrom !== null) {\n    return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n      return sel.length > 0 && _matches(destList, sel)\n    }).length > 0\n  }\n  if (curList === destList) {\n    return true\n  }\n  if (_data(curList, 'connectWith') !== undefined) {\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith')\n  }\n  return false\n}\n/*\n * Is Copy Active for sortable\n * @param {Element} sortable a single sortable\n */\nvar _isCopyActive = function (sortable) {\n  return _data(sortable, 'opts').copy === true\n}\n/*\n * get handle or return item\n * @param {Array} items\n * @param {selector} handle\n */\nvar _getHandles = function (items, handle) {\n  var result = []\n  var handles\n  if (!handle) {\n    return items\n  }\n  for (var i = 0; i < items.length; ++i) {\n    handles = items[i].querySelectorAll(handle)\n    result = result.concat(Array.prototype.slice.call(handles))\n  }\n  return result\n}\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts') || {}\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortableElement)\n  _removeSortableData(sortableElement)\n  // remove event handlers & data from items\n  _off(handles, 'mousedown')\n  _removeItemEvents(items)\n  _removeItemData(items)\n}\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'move')\n  _data(sortableElement, '_disabled', 'false')\n  _attr(handles, 'draggable', 'true')\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span')\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    _on(handles, 'mousedown', function () {\n      if (items.indexOf(this) !== -1) {\n        this.dragDrop()\n      } else {\n        var parent = this.parentElement\n        while (items.indexOf(parent) === -1) {\n          parent = parent.parentElement\n        }\n        parent.dragDrop()\n      }\n    })\n  }\n}\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'none')\n  _data(sortableElement, '_disabled', 'true')\n  _attr(handles, 'draggable', 'false')\n  _off(handles, 'mousedown')\n}\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _data(sortableElement, '_disabled', 'false')\n  // remove event handlers from items\n  _removeItemEvents(items)\n  _off(handles, 'mousedown')\n  // remove event handlers from sortable\n  _removeSortableEvents(sortableElement)\n}\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function (element) {\n  // document.body.contains(element)\n  return !!element.parentNode\n}\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function (name, detail) {\n  var e = document.createEvent('Event')\n  if (detail) {\n    e.detail = detail\n  }\n  e.initEvent(name, false, true)\n  return e\n}\n\nvar _getChildren = function (element) {\n  return element.children\n}\n\nvar _serialize = function (list) {\n  var children = _filter(_getChildren(list), _data(list, 'items'))\n  return children\n}\n\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nexport default function sortable (sortableElements, options) {\n  var method = String(options)\n  options = (function (options) {\n    var result = {\n      connectWith: false,\n      acceptFrom: null,\n      copy: false,\n      placeholder: null,\n      disableIEFix: false,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false,\n      debounce: 0,\n      maxItems: 0\n    }\n    for (var option in options) {\n      result[option] = options[option]\n    }\n    return result\n  })(options)\n\n  if (options && typeof options.getChildren === 'function') {\n    _getChildren = options.getChildren\n  }\n\n  if (typeof sortableElements === 'string') {\n    sortableElements = document.querySelectorAll(sortableElements)\n  }\n\n  if (sortableElements instanceof window.Element) {\n    sortableElements = [sortableElements]\n  }\n\n  sortableElements = Array.prototype.slice.call(sortableElements)\n\n  if (/serialize/.test(method)) {\n    var serialized = []\n    sortableElements.forEach(function (sortableElement) {\n      serialized.push({\n        list: sortableElement,\n        children: _serialize(sortableElement)\n      })\n    })\n    return serialized\n  }\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /* jshint maxstatements:false */\n  sortableElements.forEach(function (sortableElement) {\n    if (/enable|disable|destroy/.test(method)) {\n      return sortable[method](sortableElement)\n    }\n\n    // get options & set options on sortable\n    options = _data(sortableElement, 'opts') || options\n    _data(sortableElement, 'opts', options)\n    // reset sortable\n    _reloadSortable(sortableElement)\n    // initialize\n    var items = _filter(_getChildren(sortableElement), options.items)\n    var index\n    var startParent\n    var startList\n    let placeholder = _makePlaceholder(sortableElement, options.placeholder, options.placeholderClass)\n\n    _data(sortableElement, 'items', options.items)\n    placeholderMap.set(sortableElement, placeholder)\n    if (options.acceptFrom) {\n      _data(sortableElement, 'acceptFrom', options.acceptFrom)\n    } else if (options.connectWith) {\n      _data(sortableElement, 'connectWith', options.connectWith)\n    }\n\n    _enableSortable(sortableElement)\n    _attr(items, 'role', 'option')\n    _attr(items, 'aria-grabbed', 'false')\n\n    // Mouse over class\n    if (typeof options.hoverClass === 'string') {\n      let hoverClasses = options.hoverClass.split(' ')\n      // add class on hover\n      _on(items, 'mouseenter', function (e) {\n        e.target.classList.add(...hoverClasses)\n      })\n      // remove class on leave\n      _on(items, 'mouseleave', function (e) {\n        e.target.classList.remove(...hoverClasses)\n      })\n    }\n\n    // Handle drag events on draggable items\n    _on(items, 'dragstart', function (e) {\n      e.stopImmediatePropagation()\n      if ((options.handle && !_matches(e.target, options.handle)) || this.getAttribute('draggable') === 'false') {\n        return\n      }\n\n      // add transparent clone or other ghost to cursor\n      _getGhost(e, this)\n      // cache selsection & add attr for dragging\n      this.classList.add(options.draggingClass)\n      dragging = _getDragging(this, sortableElement)\n\n      _attr(dragging, 'aria-grabbed', 'true')\n      // grab values\n      index = _index(dragging)\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height)\n      startParent = this.parentElement\n      startList = _serialize(startParent)\n      // dispatch sortstart event on each element in group\n      sortableElement.dispatchEvent(_makeEvent('sortstart', {\n        item: dragging,\n        placeholder: placeholderMap.get(sortableElement),\n        startparent: startParent\n      }))\n    })\n    // Handle drag events on draggable items\n    _on(items, 'dragend', function () {\n      var newParent\n      if (!dragging) {\n        return\n      }\n      // remove dragging attributes and show item\n      dragging.classList.remove(options.draggingClass)\n      _attr(dragging, 'aria-grabbed', 'false')\n\n      if (dragging.getAttribute('aria-copied') === 'true' && _data(dragging, 'dropped') !== 'true') {\n        _detach(dragging)\n      }\n\n      dragging.style.display = dragging.oldDisplay\n      delete dragging.oldDisplay\n\n      placeholderMap.forEach(_detach)\n      newParent = this.parentElement\n\n      if (_listsConnected(newParent, startParent)) {\n        sortableElement.dispatchEvent(_makeEvent('sortstop', {\n          item: dragging,\n          startparent: startParent\n        }))\n        if (index !== _index(dragging) || startParent !== newParent) {\n          sortableElement.dispatchEvent(_makeEvent('sortupdate', {\n            item: dragging,\n            index: _filter(_getChildren(newParent), _data(newParent, 'items'))\n              .indexOf(dragging),\n            oldindex: items.indexOf(dragging),\n            elementIndex: _index(dragging),\n            oldElementIndex: index,\n            startparent: startParent,\n            endparent: newParent,\n            newEndList: _serialize(newParent),\n            newStartList: _serialize(startParent),\n            oldStartList: startList\n          }))\n        }\n      }\n      dragging = null\n      draggingHeight = null\n    })\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    _on([sortableElement, placeholder], 'drop', function (e) {\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n\n      _data(dragging, 'dropped', 'true')\n      var visiblePlaceholder = Array.from(placeholderMap.values()).filter(_attached)[0]\n      _after(visiblePlaceholder, dragging)\n    })\n\n    var debouncedDragOverEnter = _debounce((element, pageY) => {\n      if (!dragging) {\n        return\n      }\n      if (items.indexOf(element) !== -1) {\n        var thisHeight = parseInt(window.getComputedStyle(element).height)\n        var placeholderIndex = _index(placeholder)\n        var thisIndex = _index(element)\n        if (options.forcePlaceholderSize) {\n          let forcedHeight = draggingHeight > 0 ? draggingHeight : 50\n          placeholder.style.height = forcedHeight + 'px'\n        }\n\n        // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight\n          var offsetTop = _offset(element).top\n          if (placeholderIndex < thisIndex &&\n              pageY < offsetTop + deadZone) {\n            return\n          }\n          if (placeholderIndex > thisIndex &&\n              pageY > offsetTop + thisHeight - deadZone) {\n            return\n          }\n        }\n\n        if (dragging.oldDisplay === undefined) {\n          dragging.oldDisplay = dragging.style.display\n        }\n\n        if (dragging.style.display !== 'none') {\n          dragging.style.display = 'none'\n        }\n\n        if (placeholderIndex < thisIndex) {\n          _after(element, placeholder)\n        } else {\n          _before(element, placeholder)\n        }\n        // Intentionally violated chaining, it is more complex otherwise\n        Array.from(placeholderMap.values())\n          .filter(function (element) { return element !== placeholder })\n          .forEach(_detach)\n      } else {\n        if (Array.from(placeholderMap.values()).indexOf(element) === -1 &&\n            !_filter(_getChildren(element), options.items).length) {\n          placeholderMap.forEach(_detach)\n          element.appendChild(placeholder)\n        }\n      }\n    }, options.debounce)\n    // Handle dragover and dragenter events on draggable items\n    var onDragOverEnter = function (e) {\n      if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || _data(sortableElement, '_disabled') === 'true') {\n        return\n      }\n      var options = _data(sortableElement, 'opts')\n      if (parseInt(options.maxItems) && _filter(_getChildren(sortableElement), _data(sortableElement, 'items')).length >= parseInt(options.maxItems)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      e.dataTransfer.dropEffect = _isCopyActive(sortableElement) ? 'copy' : 'move'\n      debouncedDragOverEnter(this, e.pageY)\n    }\n\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter)\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter)\n  })\n\n  return sortableElements\n}\n\nsortable.destroy = function (sortableElement) {\n  _destroySortable(sortableElement)\n}\n\nsortable.enable = function (sortableElement) {\n  _enableSortable(sortableElement)\n}\n\nsortable.disable = function (sortableElement) {\n  _disableSortable(sortableElement)\n}\n\n/* START.TESTS_ONLY */\nsortable.__testing = {\n  // add internal methods here for testing purposes\n  _attached: _attached,\n  _data: _data,\n  _serialize: _serialize,\n  _removeSortableEvents: _removeSortableEvents,\n  _removeItemEvents: _removeItemEvents,\n  _removeItemData: _removeItemData,\n  _removeSortableData: _removeSortableData,\n  _listsConnected: _listsConnected,\n  _attachGhost: _attachGhost,\n  _addGhostPos: _addGhostPos,\n  _getGhost: _getGhost,\n  _getHandles: _getHandles,\n  _makeGhost: _makeGhost,\n  _index: _index,\n  _makeEvent: _makeEvent,\n  _getPlaceholders: () => placeholderMap,\n  _resetPlaceholders: () => {\n    placeholderMap.clear()\n  }\n}\n/* END.TESTS_ONLY */\n","/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {func} Function to debounce\n * @param {wait} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nexport default (func, wait = 0) => {\n  let timeout\n\n  return (...args) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      func(...args)\n    }, wait)\n  }\n}\n"],"names":["el","selector","matches","msMatchesSelector","call","element","key","value","undefined","h5s","data","nodes","wanted","Array","prototype","slice","result","i","length","_matches","push","indexOf","event","callback","addEventListener","events","removeEventListener","attribute","addAttribute","setAttribute","removeAttribute","rect","getClientRects","left","window","scrollX","top","scrollY","parentElement","children","parentNode","removeChild","dragging","draggingHeight","insertBefore","target","insertAfter","nextElementSibling","placeholderMap","Map","_removeItemEvents","items","_off","_removeSortableEvents","sortable","_makePlaceholder","sortableElement","placeholder","placeholderClasses","tempContainer","document","createElement","tagName","innerHTML","classList","add","split","_getGhost","draggedItem","ghost","_makeGhost","dataTransfer","effectAllowed","setData","setDragImage","x","y","_attachGhost","parseInt","pageX","_offset","pageY","_addGhostPos","_getDragging","ditem","_isCopyActive","_attr","cloneNode","appendChild","style","display","oldDisplay","_listsConnected","curList","destList","acceptFrom","_data","filter","sel","copy","_getHandles","handle","handles","querySelectorAll","concat","_destroySortable","opts","_filter","_getChildren","_removeAttr","_removeItemData","_enableSortable","dragDrop","disableIEFix","_on","this","parent","_reloadSortable","_attached","_makeEvent","name","detail","e","createEvent","initEvent","_serialize","list","sortableElements","options","method","String","connectWith","placeholderClass","draggingClass","hoverClass","debounce","maxItems","option","getChildren","Element","test","serialized","forEach","index","startParent","startList","set","hoverClasses_1","remove","stopImmediatePropagation","getAttribute","_index","getComputedStyle","height","dispatchEvent","item","get","startparent","newParent","_detach","oldindex","elementIndex","oldElementIndex","endparent","newEndList","newStartList","oldStartList","preventDefault","stopPropagation","visiblePlaceholder","from","values","_after","func","wait","timeout","debouncedDragOverEnter","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","forcedHeight","deadZone","offsetTop","_before","_i","args","clearTimeout","setTimeout","onDragOverEnter","dropEffect","destroy","enable","disable","_disableSortable"],"mappings":"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"}