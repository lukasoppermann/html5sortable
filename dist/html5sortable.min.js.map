{"version":3,"file":"html5sortable.min.js","sources":["../src/html5sortable.ts"],"sourcesContent":["/*\n * HTML5 Sortable library\n * https://github.com/lukasoppermann/html5sortable\n *\n * Original code copyright 2012 Ali Farhadi.\n * This version is mantained by Lukas Oppermann <lukas@vea.re>\n * Previously also mantained by Alexandru Badiu <andu@ctrlz.ro>\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n *\n * Released under the MIT license.\n */\n'use strict'\n/*\n * variables global to the plugin\n */\nvar dragging\nvar draggingHeight\nvar placeholders = []\n/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nvar _data = function (element, key, value) {\n  if (value === undefined) {\n    return element && element.h5s && element.h5s.data && element.h5s.data[key]\n  } else {\n    element.h5s = element.h5s || {}\n    element.h5s.data = element.h5s.data || {}\n    element.h5s.data[key] = value\n  }\n}\n/**\n * Remove data from element\n * @param {Element} element\n */\nvar _removeData = function (element) {\n  if (element.h5s) {\n    delete element.h5s.data\n  }\n}\n/**\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\n * @param {el} DOM element\n * @param {selector} selector test against the element\n * @returns {boolean}\n */\n/* istanbul ignore next */\nvar _matches = function (el, selector) {\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\n}\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nvar _filter = function (nodes, wanted) {\n  if (!wanted) {\n    return Array.prototype.slice.call(nodes)\n  }\n  var result = []\n  for (var i = 0; i < nodes.length; ++i) {\n    if (typeof wanted === 'string' && _matches(nodes[i], wanted)) {\n      result.push(nodes[i])\n    }\n    if (wanted.indexOf(nodes[i]) !== -1) {\n      result.push(nodes[i])\n    }\n  }\n  return result\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nvar _on = function (element, event, callback) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _on(element[i], event, callback)\n    }\n    return\n  }\n  element.addEventListener(event, callback)\n  element.h5s = element.h5s || {}\n  element.h5s.events = element.h5s.events || {}\n  element.h5s.events[event] = callback\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nvar _off = function (element, event) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _off(element[i], event)\n    }\n    return\n  }\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n    element.removeEventListener(event, element.h5s.events[event])\n    delete element.h5s.events[event]\n  }\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nvar _attr = function (element, attribute, value) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _attr(element[i], attribute, value)\n    }\n    return\n  }\n  element.setAttribute(attribute, value)\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nvar _removeAttr = function (element, attribute) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _removeAttr(element[i], attribute)\n    }\n    return\n  }\n  element.removeAttribute(attribute)\n}\n/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nvar _offset = function (element) {\n  var rect = element.getClientRects()[0]\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  }\n}\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n  _off(items, 'dragstart')\n  _off(items, 'dragend')\n  _off(items, 'selectstart')\n  _off(items, 'dragover')\n  _off(items, 'dragenter')\n  _off(items, 'drop')\n}\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function (sortable) {\n  _off(sortable, 'dragover')\n  _off(sortable, 'dragenter')\n  _off(sortable, 'drop')\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function (event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'copyMove'\n  // Firefox requires some arbitrary content in the data in order for\n  // the drag & drop functionality to work\n  event.dataTransfer.setData('text', 'arbitrary-content')\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y)\n  }\n}\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function (event, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left)\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top)\n  }\n  return ghost\n}\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param {Element} draggedItem - the item that the user drags\n */\nvar _makeGhost = function (draggedItem) {\n  return {\n    draggedItem: draggedItem\n  }\n}\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function (event, draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = _makeGhost(draggedItem)\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost)\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost)\n}\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {Element} draggedItem - the item that the user drags\n * @param {Element} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n  var ditem = draggedItem\n  if (_isCopyActive(sortable)) {\n    ditem = draggedItem.cloneNode(true)\n    _attr(ditem, 'aria-copied', 'true')\n    draggedItem.parentElement.appendChild(ditem)\n    ditem.style.display = 'none'\n    ditem.oldDisplay = draggedItem.style.display\n  }\n  return ditem\n}\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n  _removeData(sortable)\n  _removeAttr(sortable, 'aria-dropeffect')\n}\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function (items) {\n  _removeAttr(items, 'aria-grabbed')\n  _removeAttr(items, 'aria-copied')\n  _removeAttr(items, 'draggable')\n  _removeAttr(items, 'role')\n}\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function (curList, destList) {\n  var acceptFrom = _data(curList, 'opts').acceptFrom\n  if (acceptFrom !== null) {\n    return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n      return sel.length > 0 && _matches(destList, sel)\n    }).length > 0\n  }\n  if (curList === destList) {\n    return true\n  }\n  if (_data(curList, 'connectWith') !== undefined) {\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith')\n  }\n  return false\n}\n/*\n * Is Copy Active for sortable\n * @param {Element} sortable a single sortable\n */\nvar _isCopyActive = function (sortable) {\n  return _data(sortable, 'opts').copy === true\n}\n/*\n * get handle or return item\n * @param {Array} items\n * @param {selector} handle\n */\nvar _getHandles = function (items, handle) {\n  var result = []\n  var handles\n  if (!handle) {\n    return items\n  }\n  for (var i = 0; i < items.length; ++i) {\n    handles = items[i].querySelectorAll(handle)\n    result = result.concat(Array.prototype.slice.call(handles))\n  }\n  return result\n}\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts') || {}\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortableElement)\n  _removeSortableData(sortableElement)\n  // remove event handlers & data from items\n  _off(handles, 'mousedown')\n  _removeItemEvents(items)\n  _removeItemData(items)\n}\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'move')\n  _data(sortableElement, '_disabled', 'false')\n  _attr(handles, 'draggable', 'true')\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span')\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    _on(handles, 'mousedown', function () {\n      if (items.indexOf(this) !== -1) {\n        this.dragDrop()\n      } else {\n        var parent = this.parentElement\n        while (items.indexOf(parent) === -1) {\n          parent = parent.parentElement\n        }\n        parent.dragDrop()\n      }\n    })\n  }\n}\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'none')\n  _data(sortableElement, '_disabled', 'true')\n  _attr(handles, 'draggable', 'false')\n  _off(handles, 'mousedown')\n}\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _data(sortableElement, '_disabled', 'false')\n  // remove event handlers from items\n  _removeItemEvents(items)\n  _off(handles, 'mousedown')\n  // remove event handlers from sortable\n  _removeSortableEvents(sortableElement)\n}\n/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nvar _index = function (element) {\n  if (!element.parentElement) {\n    return 0\n  }\n  return Array.prototype.indexOf.call(element.parentElement.children, element)\n}\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function (element) {\n  // document.body.contains(element)\n  return !!element.parentNode\n}\n/**\n * Convert HTML string into DOM element.\n * @param {Element|string} html\n * @param {string} tagname\n * @returns {Element}\n */\nvar _html2element = function (html, tagName) {\n  if (typeof html !== 'string') {\n    return html\n  }\n  var parentElement = document.createElement(tagName)\n  parentElement.innerHTML = html\n  return parentElement.firstChild\n}\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nvar _before = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target\n  )\n}\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nvar _after = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target.nextElementSibling\n  )\n}\n/**\n * Detach element from DOM\n * @param {Element} element\n */\nvar _detach = function (element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element)\n  }\n}\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function (name, detail) {\n  var e = document.createEvent('Event')\n  if (detail) {\n    e.detail = detail\n  }\n  e.initEvent(name, false, true)\n  return e\n}\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {fn} Function to debounce\n * @param {delay} time to wait before calling function with latest arguments, 0 - no debounce\n * @param {context} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nfunction _debounce (fn, delay, context) {\n  var timer = null\n\n  if (delay === 0) {\n    return fn\n  }\n  return function () {\n    var eContext = context || this\n    var args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      fn.apply(eContext, args)\n    }, delay)\n  }\n}\n\nvar _getChildren = function (element) {\n  return element.children\n}\n\nvar _serialize = function (list) {\n  var children = _filter(_getChildren(list), _data(list, 'items'))\n  return children\n}\n\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nexport default function sortable (sortableElements, options) {\n  var method = String(options)\n  options = (function (options) {\n    var result = {\n      connectWith: false,\n      acceptFrom: null,\n      copy: false,\n      placeholder: null,\n      disableIEFix: false,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false,\n      debounce: 0,\n      maxItems: 0\n    }\n    for (var option in options) {\n      result[option] = options[option]\n    }\n    return result\n  })(options)\n\n  if (options && typeof options.getChildren === 'function') {\n    _getChildren = options.getChildren\n  }\n\n  if (typeof sortableElements === 'string') {\n    sortableElements = document.querySelectorAll(sortableElements)\n  }\n\n  if (sortableElements instanceof window.Element) {\n    sortableElements = [sortableElements]\n  }\n\n  sortableElements = Array.prototype.slice.call(sortableElements)\n\n  if (/serialize/.test(method)) {\n    var serialized = []\n    sortableElements.forEach(function (sortableElement) {\n      serialized.push({\n        list: sortableElement,\n        children: _serialize(sortableElement)\n      })\n    })\n    return serialized\n  }\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /* jshint maxstatements:false */\n  sortableElements.forEach(function (sortableElement) {\n    if (/enable|disable|destroy/.test(method)) {\n      return sortable[method](sortableElement)\n    }\n\n    // get options & set options on sortable\n    options = _data(sortableElement, 'opts') || options\n    _data(sortableElement, 'opts', options)\n    // reset sortable\n    _reloadSortable(sortableElement)\n    // initialize\n    var items = _filter(_getChildren(sortableElement), options.items)\n    var index\n    var startParent\n    var startList\n    var placeholder = options.placeholder\n    var maxItems\n    if (!placeholder) {\n      placeholder = document.createElement(\n        /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n      )\n    }\n    placeholder = _html2element(placeholder, sortableElement.tagName)\n    placeholder.classList.add.apply(\n      placeholder.classList,\n      options.placeholderClass.split(' ')\n    )\n\n    _data(sortableElement, 'items', options.items)\n    placeholders.push(placeholder)\n    if (options.acceptFrom) {\n      _data(sortableElement, 'acceptFrom', options.acceptFrom)\n    } else if (options.connectWith) {\n      _data(sortableElement, 'connectWith', options.connectWith)\n    }\n\n    _enableSortable(sortableElement)\n    _attr(items, 'role', 'option')\n    _attr(items, 'aria-grabbed', 'false')\n\n    // Mouse over class\n    if (options.hoverClass) {\n      var hoverClass = 'sortable-over'\n      if (typeof options.hoverClass === 'string') {\n        hoverClass = options.hoverClass\n      }\n\n      _on(items, 'mouseenter', function () {\n        this.classList.add(hoverClass)\n      })\n      _on(items, 'mouseleave', function () {\n        this.classList.remove(hoverClass)\n      })\n    }\n\n    // max items\n    if (options.maxItems && typeof options.maxItems === 'number') {\n      maxItems = options.maxItems\n    }\n\n    // Handle drag events on draggable items\n    _on(items, 'dragstart', function (e) {\n      e.stopImmediatePropagation()\n      if ((options.handle && !_matches(e.target, options.handle)) || this.getAttribute('draggable') === 'false') {\n        return\n      }\n\n      // add transparent clone or other ghost to cursor\n      _getGhost(e, this)\n      // cache selsection & add attr for dragging\n      this.classList.add(options.draggingClass)\n      dragging = _getDragging(this, sortableElement)\n\n      _attr(dragging, 'aria-grabbed', 'true')\n      // grab values\n      index = _index(dragging)\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height)\n      startParent = this.parentElement\n      startList = _serialize(startParent)\n      // dispatch sortstart event on each element in group\n      sortableElement.dispatchEvent(_makeEvent('sortstart', {\n        item: dragging,\n        placeholder: placeholder,\n        startparent: startParent\n      }))\n    })\n    // Handle drag events on draggable items\n    _on(items, 'dragend', function () {\n      var newParent\n      if (!dragging) {\n        return\n      }\n      // remove dragging attributes and show item\n      dragging.classList.remove(options.draggingClass)\n      _attr(dragging, 'aria-grabbed', 'false')\n\n      if (dragging.getAttribute('aria-copied') === 'true' && _data(dragging, 'dropped') !== 'true') {\n        _detach(dragging)\n      }\n\n      dragging.style.display = dragging.oldDisplay\n      delete dragging.oldDisplay\n\n      placeholders.forEach(_detach)\n      newParent = this.parentElement\n\n      if (_listsConnected(newParent, startParent)) {\n        sortableElement.dispatchEvent(_makeEvent('sortstop', {\n          item: dragging,\n          startparent: startParent\n        }))\n        if (index !== _index(dragging) || startParent !== newParent) {\n          sortableElement.dispatchEvent(_makeEvent('sortupdate', {\n            item: dragging,\n            index: _filter(_getChildren(newParent), _data(newParent, 'items'))\n              .indexOf(dragging),\n            oldindex: items.indexOf(dragging),\n            elementIndex: _index(dragging),\n            oldElementIndex: index,\n            startparent: startParent,\n            endparent: newParent,\n            newEndList: _serialize(newParent),\n            newStartList: _serialize(startParent),\n            oldStartList: startList\n          }))\n        }\n      }\n      dragging = null\n      draggingHeight = null\n    })\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    _on([sortableElement, placeholder], 'drop', function (e) {\n      var visiblePlaceholder\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n\n      _data(dragging, 'dropped', 'true')\n      visiblePlaceholder = placeholders.filter(_attached)[0]\n      _after(visiblePlaceholder, dragging)\n    })\n\n    var debouncedDragOverEnter = _debounce(function (element, pageY) {\n      if (!dragging) {\n        return\n      }\n\n      if (items.indexOf(element) !== -1) {\n        var thisHeight = parseInt(window.getComputedStyle(element).height)\n        var placeholderIndex = _index(placeholder)\n        var thisIndex = _index(element)\n        if (options.forcePlaceholderSize) {\n          placeholder.style.height = draggingHeight + 'px'\n        }\n\n        // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight\n          var offsetTop = _offset(element).top\n          if (placeholderIndex < thisIndex &&\n              pageY < offsetTop + deadZone) {\n            return\n          }\n          if (placeholderIndex > thisIndex &&\n              pageY > offsetTop + thisHeight - deadZone) {\n            return\n          }\n        }\n\n        if (dragging.oldDisplay === undefined) {\n          dragging.oldDisplay = dragging.style.display\n        }\n\n        if (dragging.style.display !== 'none') {\n          dragging.style.display = 'none'\n        }\n\n        if (placeholderIndex < thisIndex) {\n          _after(element, placeholder)\n        } else {\n          _before(element, placeholder)\n        }\n        // Intentionally violated chaining, it is more complex otherwise\n        placeholders\n          .filter(function (element) { return element !== placeholder })\n          .forEach(_detach)\n      } else {\n        if (placeholders.indexOf(element) === -1 &&\n            !_filter(_getChildren(element), options.items).length) {\n          placeholders.forEach(_detach)\n          element.appendChild(placeholder)\n        }\n      }\n    }, options.debounce)\n\n    // Handle dragover and dragenter events on draggable items\n    var onDragOverEnter = function (e) {\n      if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || _data(sortableElement, '_disabled') === 'true') {\n        return\n      }\n      if (maxItems && _filter(_getChildren(sortableElement), _data(sortableElement, 'items')).length >= maxItems) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      e.dataTransfer.dropEffect = _isCopyActive(sortableElement) ? 'copy' : 'move'\n      debouncedDragOverEnter(this, e.pageY)\n    }\n\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter)\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter)\n  })\n\n  return sortableElements\n}\n\nsortable.destroy = function (sortableElement) {\n  _destroySortable(sortableElement)\n}\n\nsortable.enable = function (sortableElement) {\n  _enableSortable(sortableElement)\n}\n\nsortable.disable = function (sortableElement) {\n  _disableSortable(sortableElement)\n}\n\n/* START.TESTS_ONLY */\nsortable.__testing = {\n  // add internal methods here for testing purposes\n  _attached: _attached,\n  _data: _data,\n  _serialize: _serialize,\n  _removeSortableEvents: _removeSortableEvents,\n  _removeItemEvents: _removeItemEvents,\n  _removeItemData: _removeItemData,\n  _removeSortableData: _removeSortableData,\n  _listsConnected: _listsConnected,\n  _attachGhost: _attachGhost,\n  _addGhostPos: _addGhostPos,\n  _getGhost: _getGhost,\n  _getHandles: _getHandles,\n  _makeGhost: _makeGhost,\n  _index: _index,\n  _makeEvent: _makeEvent,\n  _debounce: _debounce,\n  _getPlaceholders: () => placeholders,\n  _resetPlaceholders: () => {\n    placeholders = []\n  }\n}\n/* END.TESTS_ONLY */\n"],"names":["dragging","draggingHeight","placeholders","_data","element","key","value","undefined","h5s","data","_matches","el","selector","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","_filter","nodes","wanted","Array","prototype","slice","result","i","length","push","indexOf","_on","event","callback","addEventListener","events","_off","removeEventListener","_attr","attribute","setAttribute","_removeAttr","removeAttribute","_offset","rect","getClientRects","left","window","scrollX","top","scrollY","_removeItemEvents","items","_removeSortableEvents","sortable","_getGhost","draggedItem","ghost","_makeGhost","dataTransfer","effectAllowed","setData","setDragImage","x","y","_attachGhost","parseInt","pageX","pageY","_addGhostPos","_getDragging","ditem","_isCopyActive","cloneNode","parentElement","appendChild","style","display","oldDisplay","_listsConnected","curList","destList","acceptFrom","split","filter","sel","copy","_getHandles","handle","handles","querySelectorAll","concat","_destroySortable","sortableElement","opts","_getChildren","_removeItemData","_enableSortable","document","createElement","dragDrop","disableIEFix","this","parent","_reloadSortable","_index","children","_attached","parentNode","_html2element","html","tagName","innerHTML","firstChild","_before","target","insertBefore","_after","nextElementSibling","_detach","removeChild","_makeEvent","name","detail","e","createEvent","initEvent","_serialize","list","sortableElements","options","method","String","connectWith","placeholder","placeholderClass","draggingClass","hoverClass","debounce","maxItems","option","getChildren","Element","test","serialized","forEach","index","startParent","startList","classList","add","apply","remove","stopImmediatePropagation","getAttribute","getComputedStyle","height","dispatchEvent","item","startparent","newParent","oldindex","elementIndex","oldElementIndex","endparent","newEndList","newStartList","oldStartList","visiblePlaceholder","preventDefault","stopPropagation","fn","delay","context","timer","debouncedDragOverEnter","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","eContext","args","arguments","clearTimeout","setTimeout","onDragOverEnter","dropEffect","destroy","enable","disable","_disableSortable"],"mappings":"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"}