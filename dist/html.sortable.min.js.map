{"version":3,"sources":["html.sortable.js"],"names":["root","factory","define","amd","exports","module","sortable","this","_debounce","fn","delay","context","timer","eContext","args","arguments","clearTimeout","setTimeout","apply","_getChildren","element","Polymer","dom","children","filter","tagName","toLowerCase","dragging","draggingHeight","placeholders","sortables","_data","key","value","undefined","h5s","data","_removeData","_matches","el","selector","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","_filter","nodes","wanted","Array","prototype","slice","result","i","length","push","indexOf","_on","event","callback","addEventListener","events","_off","removeEventListener","_attr","attribute","setAttribute","_removeAttr","removeAttribute","_offset","rect","getClientRects","left","window","scrollX","top","scrollY","_removeItemEvents","items","_removeSortableEvents","_attachGhost","ghost","dataTransfer","effectAllowed","setData","setDragImage","draggedItem","x","y","_addGhostPos","parseInt","pageX","pageY","_makeGhost","_getGhost","_removeSortableData","_removeItemData","_listsConnected","curList","destList","_getHandles","handle","handles","querySelectorAll","concat","_destroySortable","sortableElement","opts","_enableSortable","spanEl","document","createElement","dragDrop","disableIEFix","parent","parentElement","_disableSortable","_reloadSortable","_index","_attached","parentNode","_html2element","html","innerHTML","firstChild","_before","target","insertBefore","_after","nextElementSibling","_detach","removeChild","_makeEvent","name","detail","e","createEvent","initEvent","_dispatchEventOnConnected","forEach","dispatchEvent","sortableElements","options","method","String","connectWith","placeholder","dragImage","placeholderClass","draggingClass","hoverClass","debounce","option","Element","test","index","startParent","classList","add","split","getAttribute","id","remove","stopImmediatePropagation","console","log","getComputedStyle","height","item","startparent","newParent","style","display","oldDisplay","oldindex","elementIndex","oldElementIndex","endparent","visiblePlaceholder","preventDefault","stopPropagation","debouncedDragOverEnter","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","appendChild","onDragOverEnter","dropEffect","destroy","enable","disable"],"mappings":"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","file":"html.sortable.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n}(this, function() {\n/*\n * HTML5 Sortable library\n * https://github.com/voidberg/html5sortable\n *\n * Original code copyright 2012 Ali Farhadi.\n * This version is mantained by Lukas Oppermann <lukas@vea.re>\n * Previously also mantained by Alexandru Badiu <andu@ctrlz.ro>\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n *\n * Released under the MIT license.\n */\n'use strict'\n/*\n * variables global to the plugin\n */\nvar dragging\nvar draggingHeight\nvar placeholders = []\nvar sortables = []\n/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nvar _data = function (element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key]\n    } else {\n        element.h5s = element.h5s || {}\n        element.h5s.data = element.h5s.data || {}\n        element.h5s.data[key] = value\n    }\n}\n/**\n * Remove data from element\n * @param {Element} element\n */\nvar _removeData = function (element) {\n    if (element.h5s) {\n        delete element.h5s.data\n    }\n}\n/**\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\n * @param {el} DOM element\n * @param {selector} selector test against the element\n * @retirms {boolean}\n */\nvar _matches = function (el, selector) {\n    return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\n}\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nvar _filter = function (nodes, wanted) {\n    if (!wanted) {\n        return Array.prototype.slice.call(nodes)\n    }\n    var result = []\n    for (var i = 0; i < nodes.length; ++i) {\n        if (typeof wanted === 'string' && _matches(nodes[i], wanted)) {\n            result.push(nodes[i])\n        }\n        if (wanted.indexOf(nodes[i]) !== -1) {\n            result.push(nodes[i])\n        }\n    }\n    return result\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nvar _on = function (element, event, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            _on(element[i], event, callback)\n        }\n        return\n    }\n    element.addEventListener(event, callback)\n    element.h5s = element.h5s || {}\n    element.h5s.events = element.h5s.events || {}\n    element.h5s.events[event] = callback\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nvar _off = function (element, event) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            _off(element[i], event)\n        }\n        return\n    }\n    if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n        element.removeEventListener(event, element.h5s.events[event])\n        delete element.h5s.events[event]\n    }\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nvar _attr = function (element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            _attr(element[i], attribute, value)\n        }\n        return\n    }\n    element.setAttribute(attribute, value)\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nvar _removeAttr = function (element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            _removeAttr(element[i], attribute)\n        }\n        return\n    }\n    element.removeAttribute(attribute)\n}\n/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nvar _offset = function (element) {\n    var rect = element.getClientRects()[0]\n    return {\n        left: rect.left + window.scrollX,\n        top: rect.top + window.scrollY\n    }\n}\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    _off(items, 'dragstart')\n    _off(items, 'dragend')\n    _off(items, 'selectstart')\n    _off(items, 'dragover')\n    _off(items, 'dragenter')\n    _off(items, 'drop')\n}\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function (sortable) {\n    _off(sortable, 'dragover')\n    _off(sortable, 'dragenter')\n    _off(sortable, 'drop')\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function (event, ghost) {\n    // this needs to be set for HTML5 drag & drop to work\n    event.dataTransfer.effectAllowed = 'move'\n    event.dataTransfer.setData('text', '')\n\n    // check if setDragImage method is available\n    if (event.dataTransfer.setDragImage) {\n        event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y)\n    }\n}\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function (event, ghost) {\n    if (!ghost.x) {\n        ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left)\n    }\n    if (!ghost.y) {\n        ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top)\n    }\n    return ghost\n}\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param {Element} draggedItem - the item that the user drags\n */\nvar _makeGhost = function (draggedItem) {\n    return {\n        draggedItem: draggedItem\n    }\n}\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function (event, draggedItem) {\n    // add ghost item & draggedItem to ghost object\n    var ghost = _makeGhost(draggedItem)\n    // attach ghost position\n    ghost = _addGhostPos(event, ghost)\n    // attach ghost to dataTransfer\n    _attachGhost(event, ghost)\n}\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    _removeData(sortable)\n    _removeAttr(sortable, 'aria-dropeffect')\n}\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function (items) {\n    _removeAttr(items, 'aria-grabbed')\n    _removeAttr(items, 'draggable')\n    _removeAttr(items, 'role')\n}\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function (curList, destList) {\n    if (curList === destList) {\n        return true\n    }\n    if (_data(curList, 'connectWith') !== undefined) {\n        return _data(curList, 'connectWith') === _data(destList, 'connectWith')\n    }\n    return false\n}\nvar _getHandles = function (items, handle) {\n    var result = []\n    var handles\n    if (!handle) {\n        return items\n    }\n    for (var i = 0; i < items.length; ++i) {\n        handles = items[i].querySelectorAll(handle)\n        result = result.concat(Array.prototype.slice.call(handles))\n    }\n    return result\n}\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = _data(sortableElement, 'opts') || {}\n    var items = _filter(_getChildren(sortableElement), opts.items)\n    var handles = _getHandles(items, opts.handle)\n    // remove event handlers & data from sortable\n    _removeSortableEvents(sortableElement)\n    _removeSortableData(sortableElement)\n    // remove event handlers & data from items\n    _off(handles, 'mousedown')\n    _removeItemEvents(items)\n    _removeItemData(items)\n}\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = _data(sortableElement, 'opts')\n    var items = _filter(_getChildren(sortableElement), opts.items)\n    var handles = _getHandles(items, opts.handle)\n    _attr(sortableElement, 'aria-dropeffect', 'move')\n    _attr(handles, 'draggable', 'true')\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    var spanEl = (document || window.document).createElement('span')\n    if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n        _on(handles, 'mousedown', function () {\n            if (items.indexOf(this) !== -1) {\n                this.dragDrop()\n            } else {\n                var parent = this.parentElement\n                while (items.indexOf(parent) === -1) {\n                    parent = parent.parentElement\n                }\n                parent.dragDrop()\n            }\n        })\n    }\n}\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = _data(sortableElement, 'opts')\n    var items = _filter(_getChildren(sortableElement), opts.items)\n    var handles = _getHandles(items, opts.handle)\n    _attr(sortableElement, 'aria-dropeffect', 'none')\n    _attr(handles, 'draggable', 'false')\n    _off(handles, 'mousedown')\n}\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = _data(sortableElement, 'opts')\n    var items = _filter(_getChildren(sortableElement), opts.items)\n    var handles = _getHandles(items, opts.handle)\n    // remove event handlers from items\n    _removeItemEvents(items)\n    _off(handles, 'mousedown')\n    // remove event handlers from sortable\n    _removeSortableEvents(sortableElement)\n}\n/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nvar _index = function (element) {\n    if (!element.parentElement) {\n        return 0\n    }\n    return Array.prototype.indexOf.call(element.parentElement.children, element)\n}\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function (element) {\n    return !!element.parentNode\n}\n/**\n * Convert HTML string into DOM element.\n * @param {Element|string} html\n * @param {string} tagname\n * @returns {Element}\n */\nvar _html2element = function (html, tagName) {\n    if (typeof html !== 'string') {\n        return html\n    }\n    var parentElement = document.createElement(tagName)\n    parentElement.innerHTML = html\n    return parentElement.firstChild\n}\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nvar _before = function (target, element) {\n    target.parentElement.insertBefore(\n        element,\n        target\n    )\n}\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nvar _after = function (target, element) {\n    target.parentElement.insertBefore(\n        element,\n        target.nextElementSibling\n    )\n}\n/**\n * Detach element from DOM\n * @param {Element} element\n */\nvar _detach = function (element) {\n    if (element.parentNode) {\n        element.parentNode.removeChild(element)\n    }\n}\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function (name, detail) {\n    var e = document.createEvent('Event')\n    if (detail) {\n        e.detail = detail\n    }\n    e.initEvent(name, false, true)\n    return e\n}\n/**\n * @param {Element} sortableElement\n * @param {CustomEvent} event\n */\nvar _dispatchEventOnConnected = function (sortableElement, event) {\n    sortables.forEach(function (target) {\n        if (_listsConnected(sortableElement, target)) {\n            target.dispatchEvent(event)\n        }\n    })\n}\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {fn} Function to debounce\n * @param {delay} time to wait before calling function with latest arguments, 0 - no debounce\n * @param {context} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nfunction _debounce(fn, delay, context) {\n    var timer = null\n\n    if (delay === 0) {\n        return fn\n    }\n    return function () {\n        var eContext = context || this\n        var args = arguments\n        clearTimeout(timer)\n        timer = setTimeout(function () {\n            fn.apply(eContext, args)\n        }, delay)\n    }\n}\n\nfunction _getChildren(element) {\n    return (Polymer && Polymer.dom)\n        ? Polymer.dom(element).children.filter(function (element) {\n            return element.tagName.toLowerCase() !== 'template';\n        })\n        : element.children;\n}\n\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nvar sortable = function (sortableElements, options) {\n    var method = String(options)\n\n    options = (function (options) {\n        var result = {\n            connectWith: false,\n            placeholder: null,\n            // dragImage can be null or a Element\n            dragImage: null,\n            disableIEFix: false,\n            placeholderClass: 'sortable-placeholder',\n            draggingClass: 'sortable-dragging',\n            hoverClass: false,\n            debounce: 0\n        }\n        for (var option in options) {\n            result[option] = options[option]\n        }\n        return result\n    })(options)\n\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements)\n    }\n\n    if (sortableElements instanceof window.Element) {\n        sortableElements = [sortableElements]\n    }\n\n    sortableElements = Array.prototype.slice.call(sortableElements)\n\n    /* TODO: maxstatements should be 25, fix and remove line below */\n    /* jshint maxstatements:false */\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            sortable[method](sortableElement)\n            return\n        }\n\n        // get options & set options on sortable\n        options = _data(sortableElement, 'opts') || options\n        _data(sortableElement, 'opts', options)\n        // reset sortable\n        _reloadSortable(sortableElement)\n        // initialize\n        var items = _filter(_getChildren(sortableElement), options.items)\n        var index\n        var startParent\n        var placeholder = options.placeholder\n        if (!placeholder) {\n            placeholder = document.createElement(\n                /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n            )\n        }\n        placeholder = _html2element(placeholder, sortableElement.tagName)\n        placeholder.classList.add.apply(\n            placeholder.classList,\n            options.placeholderClass.split(' ')\n        )\n\n        // setup sortable ids\n        if (!sortableElement.getAttribute('data-sortable-id')) {\n            var id = sortables.length\n            sortables[id] = sortableElement\n            _attr(sortableElement, 'data-sortable-id', id)\n            _attr(items, 'data-item-sortable-id', id)\n        }\n\n        _data(sortableElement, 'items', options.items)\n        placeholders.push(placeholder)\n        if (options.connectWith) {\n            _data(sortableElement, 'connectWith', options.connectWith)\n        }\n\n        _enableSortable(sortableElement)\n        _attr(items, 'role', 'option')\n        _attr(items, 'aria-grabbed', 'false')\n\n        // Mouse over class\n        if (options.hoverClass) {\n            var hoverClass = 'sortable-over'\n            if (typeof options.hoverClass === 'string') {\n                hoverClass = options.hoverClass\n            }\n\n            _on(items, 'mouseenter', function () {\n                this.classList.add(hoverClass)\n            })\n            _on(items, 'mouseleave', function () {\n                this.classList.remove(hoverClass)\n            })\n        }\n\n        // Handle drag events on draggable items\n        _on(items, 'dragstart', function (e) {\n            e.stopImmediatePropagation()\n            if (options.handle && !_matches(e.target, options.handle)) {\n                return\n            }\n\n            if (options.dragImage) {\n                _attachGhost(e, {\n                    draggedItem: options.dragImage,\n                    x: 0,\n                    y: 0\n                })\n                console.log('WARNING: dragImage option is deprecated' +\n                    ' and will be removed in the future!')\n            } else {\n                // add transparent clone or other ghost to cursor\n                _getGhost(e, this)\n            }\n            // cache selsection & add attr for dragging\n            this.classList.add(options.draggingClass)\n            dragging = this\n            _attr(dragging, 'aria-grabbed', 'true')\n            // grab values\n            index = _index(dragging)\n            draggingHeight = parseInt(window.getComputedStyle(dragging).height)\n            startParent = this.parentElement\n            // dispatch sortstart event on each element in group\n            _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n                item: dragging,\n                placeholder: placeholder,\n                startparent: startParent\n            }))\n        })\n        // Handle drag events on draggable items\n        _on(items, 'dragend', function () {\n            var newParent\n            if (!dragging) {\n                return\n            }\n            // remove dragging attributes and show item\n            dragging.classList.remove(options.draggingClass)\n            _attr(dragging, 'aria-grabbed', 'false')\n            dragging.style.display = dragging.oldDisplay\n            delete dragging.oldDisplay\n\n            placeholders.forEach(_detach)\n            newParent = this.parentElement\n            _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n                item: dragging,\n                startparent: startParent\n            }))\n            if (index !== _index(dragging) || startParent !== newParent) {\n                _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n                    item: dragging,\n                    index: _filter(_getChildren(newParent), _data(newParent, 'items'))\n                        .indexOf(dragging),\n                    oldindex: items.indexOf(dragging),\n                    elementIndex: _index(dragging),\n                    oldElementIndex: index,\n                    startparent: startParent,\n                    endparent: newParent\n                }))\n            }\n            dragging = null\n            draggingHeight = null\n        })\n        // Handle drop event on sortable & placeholder\n        // TODO: REMOVE placeholder?????\n        _on([sortableElement, placeholder], 'drop', function (e) {\n            var visiblePlaceholder\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return\n            }\n\n            e.preventDefault()\n            e.stopPropagation()\n            visiblePlaceholder = placeholders.filter(_attached)[0]\n            _after(visiblePlaceholder, dragging)\n            dragging.dispatchEvent(_makeEvent('dragend'))\n        })\n\n        var debouncedDragOverEnter = _debounce(function (element, pageY) {\n            if (!dragging) {\n                return\n            }\n\n            if (items.indexOf(element) !== -1) {\n                var thisHeight = parseInt(window.getComputedStyle(element).height)\n                var placeholderIndex = _index(placeholder)\n                var thisIndex = _index(element)\n                if (options.forcePlaceholderSize) {\n                    placeholder.style.height = draggingHeight + 'px'\n                }\n\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight) {\n                    // Dead zone?\n                    var deadZone = thisHeight - draggingHeight\n                    var offsetTop = _offset(element).top\n                    if (placeholderIndex < thisIndex &&\n                        pageY < offsetTop + deadZone) {\n                        return\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        pageY > offsetTop + thisHeight - deadZone) {\n                        return\n                    }\n                }\n\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display\n                }\n                dragging.style.display = 'none'\n                if (placeholderIndex < thisIndex) {\n                    _after(element, placeholder)\n                } else {\n                    _before(element, placeholder)\n                }\n                // Intentionally violated chaining, it is more complex otherwise\n                placeholders\n                    .filter(function (element) {\n                        return element !== placeholder\n                    })\n                    .forEach(_detach)\n            } else {\n                if (placeholders.indexOf(element) === -1 && !_filter(_getChildren(element), options.items).length) {\n                    placeholders.forEach(_detach)\n                    element.appendChild(placeholder)\n                }\n            }\n        }, options.debounce)\n\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return\n            }\n\n            e.preventDefault()\n            e.stopPropagation()\n            e.dataTransfer.dropEffect = 'move'\n            debouncedDragOverEnter(this, e.pageY)\n        }\n\n        _on(items.concat(sortableElement), 'dragover', onDragOverEnter)\n        _on(items.concat(sortableElement), 'dragenter', onDragOverEnter)\n    })\n\n    return sortableElements\n}\n\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement)\n}\n\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement)\n}\n\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement)\n}\n\n\nreturn sortable;\n}));\n"]}