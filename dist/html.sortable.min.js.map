{"version":3,"sources":["html.sortable.js"],"names":["root","factory","define","amd","exports","module","require","sortable","jQuery","this","$","dragging","draggingHeight","placeholders","sortables","_removeItemEvents","items","off","_removeSortableEvents","_attachGhost","event","ghost","dataTransfer","effectAllowed","setData","setDragImage","item","x","y","_addGhostPos","e","parseInt","pageX","draggedItem","offset","left","pageY","top","_makeGhost","$draggedItem","_getGhost","_getOptions","soptions","options","_removeSortableData","removeData","removeAttr","_removeItemData","_listsConnected","curList","destList","undefined","data","_destroySortable","opts","children","handles","handle","find","_enableSortable","attr","spanEl","document","window","createElement","dragDrop","disableIEFix","on","index","parents","_disableSortable","_reloadSortable","selector","$sortables","method","String","extend","connectWith","placeholder","dragImage","placeholderClass","draggingClass","hoverClass","each","$sortable","test","startParent","newParent","tagName","addClass","id","length","add","hover","removeClass","stopImmediatePropagation","originalEvent","console","log","height","parent","triggerHandler","startparent","show","detach","get","oldindex","elementIndex","oldElementIndex","endparent","stopPropagation","filter","after","trigger","preventDefault","dropEffect","is","thisHeight","forcePlaceholderSize","deadZone","offsetTop","hide","before","not","append","destroy","enable","disable","fn"],"mappings":"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","file":"html.sortable.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    root.sortable = factory(root.jQuery);\n  }\n}(this, function($) {\n/*\n * HTML5 Sortable jQuery Plugin\n * https://github.com/voidberg/html5sortable\n *\n * Original code copyright 2012 Ali Farhadi.\n * This version is mantained by Alexandru Badiu <andu@ctrlz.ro> & Lukas Oppermann <lukas@vea.re>\n *\n *\n * Released under the MIT license.\n */\n'use strict';\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar placeholders = $();\nvar sortables = [];\n/*\n * remove event handlers from items\n * @param [jquery Collection] items\n * @info event.h5s (jquery way of namespacing events, to bind multiple handlers to the event)\n */\nvar _removeItemEvents = function(items) {\n  items.off('dragstart.h5s');\n  items.off('dragend.h5s');\n  items.off('selectstart.h5s');\n  items.off('dragover.h5s');\n  items.off('dragenter.h5s');\n  items.off('drop.h5s');\n};\n/*\n * remove event handlers from sortable\n * @param [jquery Collection] sortable\n * @info event.h5s (jquery way of namespacing events, to bind multiple handlers to the event)\n */\nvar _removeSortableEvents = function(sortable) {\n  sortable.off('dragover.h5s');\n  sortable.off('dragenter.h5s');\n  sortable.off('drop.h5s');\n};\n/*\n * attache ghost to dataTransfer object\n * @param [event] original event\n * @param [object] ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function(event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'move';\n  event.dataTransfer.setData('text', '');\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.item, ghost.x, ghost.y);\n  }\n};\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param [object] event - the event fired when dragstart is triggered\n * @param [object] ghost - .item = node, draggedItem = jQuery collection\n */\nvar _addGhostPos = function(e, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(e.pageX - ghost.draggedItem.offset().left);\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(e.pageY - ghost.draggedItem.offset().top);\n  }\n  return ghost;\n};\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param [jQuery selection] $draggedItem - the item that the user drags\n */\nvar _makeGhost = function($draggedItem) {\n  return {\n    item: $draggedItem[0],\n    draggedItem: $draggedItem\n  };\n};\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param [event] event - the original drag event object\n * @param [jQuery selection] $draggedItem - the item that the user drags\n * @param [object] ghostOpt - the ghost options\n */\n// TODO: could $draggedItem be replaced by event.target in all instances\nvar _getGhost = function(event, $draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = _makeGhost($draggedItem);\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost);\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost);\n};\n/*\n * return options if not set on sortable already\n * @param [object] soptions\n * @param [object] options\n */\nvar _getOptions = function(soptions, options) {\n  if (typeof soptions === 'undefined') {\n    return options;\n  }\n  return soptions;\n};\n/*\n * remove data from sortable\n * @param [jquery Collection] a single sortable\n */\nvar _removeSortableData = function(sortable) {\n  sortable.removeData('opts');\n  sortable.removeData('connectWith');\n  sortable.removeData('items');\n  sortable.removeAttr('aria-dropeffect');\n};\n/*\n * remove data from items\n * @param [jquery Collection] items\n */\nvar _removeItemData = function(items) {\n  items.removeAttr('aria-grabbed');\n  items.removeAttr('draggable');\n  items.removeAttr('role');\n};\n/*\n * check if two lists are connected\n * @param [jquery Collection] items\n */\nvar _listsConnected = function(curList, destList) {\n  if (curList[0] === destList[0]) {\n    return true;\n  }\n  if (curList.data('connectWith') !== undefined) {\n    return curList.data('connectWith') === destList.data('connectWith');\n  }\n  return false;\n};\n/*\n * destroy the sortable\n * @param [jquery Collection] a single sortable\n */\nvar _destroySortable = function(sortable) {\n  var opts = sortable.data('opts') || {};\n  var items = sortable.children(opts.items);\n  var handles = opts.handle ? items.find(opts.handle) : items;\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortable);\n  _removeSortableData(sortable);\n  // remove event handlers & data from items\n  handles.off('mousedown.h5s');\n  _removeItemEvents(items);\n  _removeItemData(items);\n};\n/*\n * enable the sortable\n * @param [jquery Collection] a single sortable\n */\nvar _enableSortable = function(sortable) {\n  var opts = sortable.data('opts');\n  var items = sortable.children(opts.items);\n  var handles = opts.handle ? items.find(opts.handle) : items;\n  sortable.attr('aria-dropeffect', 'move');\n  handles.attr('draggable', 'true');\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span');\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    handles.on('mousedown.h5s', function() {\n      if (items.index(this) !== -1) {\n        this.dragDrop();\n      } else {\n        $(this).parents(opts.items)[0].dragDrop();\n      }\n    });\n  }\n};\n/*\n * disable the sortable\n * @param [jquery Collection] a single sortable\n */\nvar _disableSortable = function(sortable) {\n  var opts = sortable.data('opts');\n  var items = sortable.children(opts.items);\n  var handles = opts.handle ? items.find(opts.handle) : items;\n  sortable.attr('aria-dropeffect', 'none');\n  handles.attr('draggable', false);\n  handles.off('mousedown.h5s');\n};\n/*\n * reload the sortable\n * @param [jquery Collection] a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function(sortable) {\n  var opts = sortable.data('opts');\n  var items = sortable.children(opts.items);\n  var handles = opts.handle ? items.find(opts.handle) : items;\n  // remove event handlers from items\n  _removeItemEvents(items);\n  handles.off('mousedown.h5s');\n  // remove event handlers from sortable\n  _removeSortableEvents(sortable);\n};\n/*\n * public sortable object\n * @param [object|string] options|method\n */\nvar sortable = function(selector, options) {\n\n  var $sortables = $(selector);\n  var method = String(options);\n\n  options = $.extend({\n    connectWith: false,\n    placeholder: null,\n    // dragImage can be null or a jQuery element\n    dragImage: null,\n    disableIEFix: false,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false\n  }, options);\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /*jshint maxstatements:false */\n  return $sortables.each(function() {\n\n    var $sortable = $(this);\n\n    if (/enable|disable|destroy/.test(method)) {\n      sortable[method]($sortable);\n      return;\n    }\n\n    // get options & set options on sortable\n    options = _getOptions($sortable.data('opts'), options);\n    $sortable.data('opts', options);\n    // reset sortable\n    _reloadSortable($sortable);\n    // initialize\n    var items = $sortable.children(options.items);\n    var index;\n    var startParent;\n    var newParent;\n    var placeholder = (options.placeholder === null) ? $('<' + (/^ul|ol$/i.test(this.tagName) ? 'li' : 'div') + ' class=\"' + options.placeholderClass + '\"/>') : $(options.placeholder).addClass(options.placeholderClass);\n\n    // setup sortable ids\n    if (!$sortable.attr('data-sortable-id')) {\n      var id = sortables.length;\n      sortables[id] = $sortable;\n      $sortable.attr('data-sortable-id', id);\n      items.attr('data-item-sortable-id', id);\n    }\n\n    $sortable.data('items', options.items);\n    placeholders = placeholders.add(placeholder);\n    if (options.connectWith) {\n      $sortable.data('connectWith', options.connectWith);\n    }\n\n    _enableSortable($sortable);\n    items.attr('role', 'option');\n    items.attr('aria-grabbed', 'false');\n\n    // Mouse over class\n    if (options.hoverClass) {\n      var hoverClass = 'sortable-over';\n      if (typeof options.hoverClass === 'string') {\n        hoverClass = options.hoverClass;\n      }\n\n      items.hover(function() {\n        $(this).addClass(hoverClass);\n      }, function() {\n        $(this).removeClass(hoverClass);\n      });\n    }\n\n    // Handle drag events on draggable items\n    items.on('dragstart.h5s', function(e) {\n      e.stopImmediatePropagation();\n\n      if (options.dragImage) {\n        _attachGhost(e.originalEvent, {\n          item: options.dragImage,\n          x: 0,\n          y: 0\n        });\n        console.log('WARNING: dragImage option is deprecated' +\n        ' and will be removed in the future!');\n      } else {\n        // add transparent clone or other ghost to cursor\n        _getGhost(e.originalEvent, $(this), options.dragImage);\n      }\n      // cache selsection & add attr for dragging\n      dragging = $(this);\n      dragging.addClass(options.draggingClass);\n      dragging.attr('aria-grabbed', 'true');\n      // grab values\n      index = dragging.index();\n      draggingHeight = dragging.height();\n      startParent = $(this).parent();\n      // trigger sortstar update\n      dragging.parent().triggerHandler('sortstart', {\n        item: dragging,\n        placeholder: placeholder,\n        startparent: startParent\n      });\n    });\n    // Handle drag events on draggable items\n    items.on('dragend.h5s', function() {\n      if (!dragging) {\n        return;\n      }\n      // remove dragging attributes and show item\n      dragging.removeClass(options.draggingClass);\n      dragging.attr('aria-grabbed', 'false');\n      dragging.show();\n\n      placeholders.detach();\n      newParent = $(this).parent();\n      dragging.parent().triggerHandler('sortstop', {\n        item: dragging,\n        startparent: startParent,\n      });\n      if (index !== dragging.index() ||\n          startParent.get(0) !== newParent.get(0)) {\n        dragging.parent().triggerHandler('sortupdate', {\n          item: dragging,\n          index: newParent.children(newParent.data('items')).index(dragging),\n          oldindex: items.index(dragging),\n          elementIndex: dragging.index(),\n          oldElementIndex: index,\n          startparent: startParent,\n          endparent: newParent\n        });\n      }\n      dragging = null;\n      draggingHeight = null;\n    });\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    $(this).add([placeholder]).on('drop.h5s', function(e) {\n      if (!_listsConnected($sortable, $(dragging).parent())) {\n        return;\n      }\n\n      e.stopPropagation();\n      placeholders.filter(':visible').after(dragging);\n      dragging.trigger('dragend.h5s');\n      return false;\n    });\n\n    // Handle dragover and dragenter events on draggable items\n    items.add([this]).on('dragover.h5s dragenter.h5s', function(e) {\n      if (!_listsConnected($sortable, $(dragging).parent())) {\n        return;\n      }\n\n      e.preventDefault();\n      e.originalEvent.dataTransfer.dropEffect = 'move';\n      if (items.is(this)) {\n        var thisHeight = $(this).height();\n        if (options.forcePlaceholderSize) {\n          placeholder.height(draggingHeight);\n        }\n\n        // Check if $(this) is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight;\n          var offsetTop = $(this).offset().top;\n          if (placeholder.index() < $(this).index() &&\n              e.originalEvent.pageY < offsetTop + deadZone) {\n            return false;\n          }\n          if (placeholder.index() > $(this).index() &&\n              e.originalEvent.pageY > offsetTop + thisHeight - deadZone) {\n            return false;\n          }\n        }\n\n        dragging.hide();\n        if (placeholder.index() < $(this).index()) {\n          $(this).after(placeholder);\n        } else {\n          $(this).before(placeholder);\n        }\n        placeholders.not(placeholder).detach();\n      } else {\n        if (!placeholders.is(this) && !$(this).children(options.items).length) {\n          placeholders.detach();\n          $(this).append(placeholder);\n        }\n      }\n      return false;\n    });\n  });\n};\n\nsortable.destroy = function(sortable) {\n  _destroySortable(sortable);\n};\n\nsortable.enable = function(sortable) {\n  _enableSortable(sortable);\n};\n\nsortable.disable = function(sortable) {\n  _disableSortable(sortable);\n};\n\n$.fn.sortable = function(options) {\n  return sortable(this, options);\n};\n\nreturn sortable;\n}));\n"],"sourceRoot":"/source/"}